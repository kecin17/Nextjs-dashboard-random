{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\pagespeed-insights\\\\score.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { object, string, number, boolean } from 'yup';\nimport CircleProgress from '../../circle-progress';\nimport Widget from '../../widget';\nconst schema = object().shape({\n  url: string().url().required(),\n  filterThirdPartyResources: boolean(),\n  interval: number(),\n  strategy: string(),\n  title: string()\n});\nexport default class PageSpeedInsightsScore extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      score: 0,\n      loading: true,\n      error: false\n    });\n  }\n\n  componentDidMount() {\n    schema.validate(this.props).then(() => this.fetchInformation()).catch(err => {\n      console.error(`${err.name} @ ${this.constructor.name}`, err.errors);\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  async fetchInformation() {\n    const {\n      url,\n      filterThirdPartyResources,\n      strategy\n    } = this.props;\n    const searchParams = [`url=${url}`, `filter_third_party_resources=${filterThirdPartyResources}`, `strategy=${strategy}`].join('&');\n\n    try {\n      const res = await fetch(`https://www.googleapis.com/pagespeedonline/v2/runPagespeed?${searchParams}`);\n      const json = await res.json();\n      this.setState({\n        error: false,\n        loading: false,\n        score: json.ruleGroups.SPEED.score\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval);\n    }\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      score\n    } = this.state;\n    const {\n      title\n    } = this.props;\n    return __jsx(Widget, {\n      title: title,\n      loading: loading,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(CircleProgress, {\n      value: score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n_defineProperty(PageSpeedInsightsScore, \"defaultProps\", {\n  filterThirdPartyResources: false,\n  interval: 1000 * 60 * 60 * 12,\n  strategy: 'desktop',\n  title: 'PageSpeed Score'\n});","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/pagespeed-insights/score.js"],"names":["Component","fetch","object","string","number","boolean","CircleProgress","Widget","schema","shape","url","required","filterThirdPartyResources","interval","strategy","title","PageSpeedInsightsScore","score","loading","error","componentDidMount","validate","props","then","fetchInformation","catch","err","console","name","constructor","errors","setState","componentWillUnmount","clearTimeout","timeout","searchParams","join","res","json","ruleGroups","SPEED","setTimeout","render","state"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport { object, string, number, boolean } from 'yup'\nimport CircleProgress from '../../circle-progress'\nimport Widget from '../../widget'\n\nconst schema = object().shape({\n  url: string().url().required(),\n  filterThirdPartyResources: boolean(),\n  interval: number(),\n  strategy: string(),\n  title: string()\n})\n\nexport default class PageSpeedInsightsScore extends Component {\n  static defaultProps = {\n    filterThirdPartyResources: false,\n    interval: 1000 * 60 * 60 * 12,\n    strategy: 'desktop',\n    title: 'PageSpeed Score'\n  }\n\n  state = {\n    score: 0,\n    loading: true,\n    error: false\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  async fetchInformation () {\n    const { url, filterThirdPartyResources, strategy } = this.props\n\n    const searchParams = [\n      `url=${url}`,\n      `filter_third_party_resources=${filterThirdPartyResources}`,\n      `strategy=${strategy}`\n    ].join('&')\n\n    try {\n      const res = await fetch(`https://www.googleapis.com/pagespeedonline/v2/runPagespeed?${searchParams}`)\n      const json = await res.json()\n\n      this.setState({ error: false, loading: false, score: json.ruleGroups.SPEED.score })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  render () {\n    const { error, loading, score } = this.state\n    const { title } = this.props\n    return (\n      <Widget title={title} loading={loading} error={error}>\n        <CircleProgress value={score} />\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}