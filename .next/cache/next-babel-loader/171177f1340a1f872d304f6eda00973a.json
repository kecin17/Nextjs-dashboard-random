{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\datetime\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport tinytime from 'tinytime';\nimport styled from 'styled-components';\nimport Widget from '../../widget';\nconst TimeItem = styled.div.withConfig({\n  displayName: \"datetime__TimeItem\",\n  componentId: \"sc-1ynucdp-0\"\n})([\"font-size:4em;text-align:center;\"]);\nconst DateItem = styled.div.withConfig({\n  displayName: \"datetime__DateItem\",\n  componentId: \"sc-1ynucdp-1\"\n})([\"font-size:1.5em;text-align:center;\"]);\nexport default class DateTime extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      date: new Date()\n    });\n  }\n\n  componentDidMount() {\n    const {\n      interval\n    } = this.props;\n    this.interval = setInterval(() => this.updateTime(), interval);\n  }\n\n  updateTime() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      date\n    } = this.state;\n    return __jsx(Widget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, __jsx(TimeItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, tinytime('{H}:{mm}').render(date)), __jsx(DateItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, tinytime('{DD}.{Mo}.{YYYY}').render(date)));\n  }\n\n}\n\n_defineProperty(DateTime, \"defaultProps\", {\n  interval: 1000 * 10\n});","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/datetime/index.js"],"names":["Component","tinytime","styled","Widget","TimeItem","div","DateItem","DateTime","date","Date","componentDidMount","interval","props","setInterval","updateTime","setState","componentWillUnmount","clearInterval","render","state"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,wCAAd;AAKA,MAAMC,QAAQ,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,0CAAd;AAKA,eAAe,MAAME,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCAKtC;AACNQ,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADA,KALsC;AAAA;;AAS9CC,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,SAAKD,QAAL,GAAgBE,WAAW,CAAC,MAAM,KAAKC,UAAL,EAAP,EAA0BH,QAA1B,CAA3B;AACD;;AAEDG,EAAAA,UAAU,GAAI;AACZ,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,KAAd;AACD;;AAEDO,EAAAA,oBAAoB,GAAI;AACtBC,IAAAA,aAAa,CAAC,KAAKN,QAAN,CAAb;AACD;;AAEDO,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEV,MAAAA;AAAF,QAAW,KAAKW,KAAtB;AACA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWlB,QAAQ,CAAC,UAAD,CAAR,CAAqBiB,MAArB,CAA4BV,IAA5B,CAAX,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWP,QAAQ,CAAC,kBAAD,CAAR,CAA6BiB,MAA7B,CAAoCV,IAApC,CAAX,CAFF,CADF;AAMD;;AA/B6C;;gBAA3BD,Q,kBACG;AACpBI,EAAAA,QAAQ,EAAE,OAAO;AADG,C","sourcesContent":["import { Component } from 'react'\nimport tinytime from 'tinytime'\nimport styled from 'styled-components'\nimport Widget from '../../widget'\n\nconst TimeItem = styled.div`\n  font-size: 4em;\n  text-align: center;\n`\n\nconst DateItem = styled.div`\n  font-size: 1.5em;\n  text-align: center;\n`\n\nexport default class DateTime extends Component {\n  static defaultProps = {\n    interval: 1000 * 10\n  }\n\n  state = {\n    date: new Date()\n  }\n\n  componentDidMount () {\n    const { interval } = this.props\n\n    this.interval = setInterval(() => this.updateTime(), interval)\n  }\n\n  updateTime () {\n    this.setState({ date: new Date() })\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  render () {\n    const { date } = this.state\n    return (\n      <Widget>\n        <TimeItem>{tinytime('{H}:{mm}').render(date)}</TimeItem>\n        <DateItem>{tinytime('{DD}.{Mo}.{YYYY}').render(date)}</DateItem>\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}