{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\pagespeed-insights\\\\stats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { object, string, boolean, number } from 'yup';\nimport Table, { Th, Td } from '../../table';\nimport Widget from '../../widget';\nconst schema = object().shape({\n  url: string().url().required(),\n  filterThirdPartyResources: boolean(),\n  interval: number(),\n  strategy: string(),\n  title: string()\n});\nexport default class PageSpeedInsightsStats extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      stats: {},\n      loading: true,\n      error: false\n    });\n  }\n\n  componentDidMount() {\n    schema.validate(this.props).then(() => this.fetchInformation()).catch(err => {\n      console.error(`${err.name} @ ${this.constructor.name}`, err.errors);\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  bytesToKilobytes(bytes) {\n    return bytes > 0 ? (bytes / 1024).toFixed(1) : 0;\n  }\n\n  async fetchInformation() {\n    const {\n      url,\n      filterThirdPartyResources,\n      strategy\n    } = this.props;\n    const searchParams = [`url=${url}`, `filter_third_party_resources=${filterThirdPartyResources}`, `strategy=${strategy}`].join('&');\n\n    try {\n      const res = await fetch(`https://www.googleapis.com/pagespeedonline/v2/runPagespeed?${searchParams}`);\n      const json = await res.json();\n      const pageStats = json.pageStats;\n      const stats = {\n        cssCount: pageStats.numberCssResources || 0,\n        cssSize: this.bytesToKilobytes(pageStats.cssResponseBytes),\n        htmlSize: this.bytesToKilobytes(pageStats.htmlResponseBytes),\n        imageSize: this.bytesToKilobytes(pageStats.imageResponseBytes),\n        javascriptCount: pageStats.numberJsResources || 0,\n        javascriptSize: this.bytesToKilobytes(pageStats.javascriptResponseBytes),\n        requestCount: pageStats.numberResources || 0,\n        requestSize: this.bytesToKilobytes(pageStats.totalRequestBytes),\n        otherSize: this.bytesToKilobytes(pageStats.otherResponseBytes)\n      };\n      this.setState({\n        error: false,\n        loading: false,\n        stats\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval);\n    }\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      stats\n    } = this.state;\n    const {\n      title\n    } = this.props;\n    return __jsx(Widget, {\n      title: title,\n      loading: loading,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Request\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, stats.requestSize, \" KB (\", stats.requestCount, \")\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, \"JavaScript\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, stats.javascriptSize, \" KB (\", stats.javascriptCount, \")\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"CSS\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, stats.cssSize, \" KB (\", stats.cssCount, \")\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"HTML\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, stats.htmlSize, \" KB\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"Image\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, stats.imageSize, \" KB\")), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Other\"), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, stats.otherSize, \" KB\")))));\n  }\n\n}\n\n_defineProperty(PageSpeedInsightsStats, \"defaultProps\", {\n  filterThirdPartyResources: false,\n  interval: 1000 * 60 * 60 * 12,\n  strategy: 'desktop',\n  title: 'PageSpeed Stats'\n});","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/pagespeed-insights/stats.js"],"names":["Component","fetch","object","string","boolean","number","Table","Th","Td","Widget","schema","shape","url","required","filterThirdPartyResources","interval","strategy","title","PageSpeedInsightsStats","stats","loading","error","componentDidMount","validate","props","then","fetchInformation","catch","err","console","name","constructor","errors","setState","componentWillUnmount","clearTimeout","timeout","bytesToKilobytes","bytes","toFixed","searchParams","join","res","json","pageStats","cssCount","numberCssResources","cssSize","cssResponseBytes","htmlSize","htmlResponseBytes","imageSize","imageResponseBytes","javascriptCount","numberJsResources","javascriptSize","javascriptResponseBytes","requestCount","numberResources","requestSize","totalRequestBytes","otherSize","otherResponseBytes","setTimeout","render","state"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,MAAlC,QAAgD,KAAhD;AACA,OAAOC,KAAP,IAAgBC,EAAhB,EAAoBC,EAApB,QAA8B,aAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,MAAM,GAAGR,MAAM,GAAGS,KAAT,CAAe;AAC5BC,EAAAA,GAAG,EAAET,MAAM,GAAGS,GAAT,GAAeC,QAAf,EADuB;AAE5BC,EAAAA,yBAAyB,EAAEV,OAAO,EAFN;AAG5BW,EAAAA,QAAQ,EAAEV,MAAM,EAHY;AAI5BW,EAAAA,QAAQ,EAAEb,MAAM,EAJY;AAK5Bc,EAAAA,KAAK,EAAEd,MAAM;AALe,CAAf,CAAf;AAQA,eAAe,MAAMe,sBAAN,SAAqClB,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCAQpD;AACNmB,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KARoD;AAAA;;AAc5DC,EAAAA,iBAAiB,GAAI;AACnBZ,IAAAA,MAAM,CAACa,QAAP,CAAgB,KAAKC,KAArB,EACGC,IADH,CACQ,MAAM,KAAKC,gBAAL,EADd,EAEGC,KAFH,CAEUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACR,KAAR,CAAe,GAAEO,GAAG,CAACE,IAAK,MAAK,KAAKC,WAAL,CAAiBD,IAAK,EAArD,EAAwDF,GAAG,CAACI,MAA5D;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAE,IAAT;AAAeD,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACD,KALH;AAMD;;AAEDc,EAAAA,oBAAoB,GAAI;AACtBC,IAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACD;;AAEDC,EAAAA,gBAAgB,CAAEC,KAAF,EAAS;AACvB,WAAOA,KAAK,GAAG,CAAR,GAAY,CAACA,KAAK,GAAG,IAAT,EAAeC,OAAf,CAAuB,CAAvB,CAAZ,GAAwC,CAA/C;AACD;;AAEqB,QAAhBb,gBAAgB,GAAI;AACxB,UAAM;AAAEd,MAAAA,GAAF;AAAOE,MAAAA,yBAAP;AAAkCE,MAAAA;AAAlC,QAA+C,KAAKQ,KAA1D;AAEA,UAAMgB,YAAY,GAAG,CAClB,OAAM5B,GAAI,EADQ,EAElB,gCAA+BE,yBAA0B,EAFvC,EAGlB,YAAWE,QAAS,EAHF,EAInByB,IAJmB,CAId,GAJc,CAArB;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMzC,KAAK,CAAE,8DAA6DuC,YAAa,EAA5E,CAAvB;AACA,YAAMG,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEA,YAAMC,SAAS,GAAGD,IAAI,CAACC,SAAvB;AACA,YAAMzB,KAAK,GAAG;AACZ0B,QAAAA,QAAQ,EAAED,SAAS,CAACE,kBAAV,IAAgC,CAD9B;AAEZC,QAAAA,OAAO,EAAE,KAAKV,gBAAL,CAAsBO,SAAS,CAACI,gBAAhC,CAFG;AAGZC,QAAAA,QAAQ,EAAE,KAAKZ,gBAAL,CAAsBO,SAAS,CAACM,iBAAhC,CAHE;AAIZC,QAAAA,SAAS,EAAE,KAAKd,gBAAL,CAAsBO,SAAS,CAACQ,kBAAhC,CAJC;AAKZC,QAAAA,eAAe,EAAET,SAAS,CAACU,iBAAV,IAA+B,CALpC;AAMZC,QAAAA,cAAc,EAAE,KAAKlB,gBAAL,CAAsBO,SAAS,CAACY,uBAAhC,CANJ;AAOZC,QAAAA,YAAY,EAAEb,SAAS,CAACc,eAAV,IAA6B,CAP/B;AAQZC,QAAAA,WAAW,EAAE,KAAKtB,gBAAL,CAAsBO,SAAS,CAACgB,iBAAhC,CARD;AASZC,QAAAA,SAAS,EAAE,KAAKxB,gBAAL,CAAsBO,SAAS,CAACkB,kBAAhC;AATC,OAAd;AAYA,WAAK7B,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAE,KAAT;AAAgBD,QAAAA,OAAO,EAAE,KAAzB;AAAgCD,QAAAA;AAAhC,OAAd;AACD,KAlBD,CAkBE,OAAOE,KAAP,EAAc;AACd,WAAKY,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAE,IAAT;AAAeD,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACD,KApBD,SAoBU;AACR,WAAKgB,OAAL,GAAe2B,UAAU,CAAC,MAAM,KAAKrC,gBAAL,EAAP,EAAgC,KAAKF,KAAL,CAAWT,QAA3C,CAAzB;AACD;AACF;;AAEDiD,EAAAA,MAAM,GAAI;AACR,UAAM;AAAE3C,MAAAA,KAAF;AAASD,MAAAA,OAAT;AAAkBD,MAAAA;AAAlB,QAA4B,KAAK8C,KAAvC;AACA,UAAM;AAAEhD,MAAAA;AAAF,QAAY,KAAKO,KAAvB;AACA,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEP,KAAf;AAAsB,MAAA,OAAO,EAAEG,OAA/B;AAAwC,MAAA,KAAK,EAAEC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACwC,WAAX,WAA6BxC,KAAK,CAACsC,YAAnC,MAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKtC,KAAK,CAACoC,cAAX,WAAgCpC,KAAK,CAACkC,eAAtC,MAFF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlC,KAAK,CAAC4B,OAAX,WAAyB5B,KAAK,CAAC0B,QAA/B,MAFF,CAXF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK1B,KAAK,CAAC8B,QAAX,QAFF,CAhBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK9B,KAAK,CAACgC,SAAX,QAFF,CArBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhC,KAAK,CAAC0C,SAAX,QAFF,CA1BF,CADF,CADF,CADF;AAqCD;;AAzG2D;;gBAAzC3C,sB,kBACG;AACpBJ,EAAAA,yBAAyB,EAAE,KADP;AAEpBC,EAAAA,QAAQ,EAAE,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAFP;AAGpBC,EAAAA,QAAQ,EAAE,SAHU;AAIpBC,EAAAA,KAAK,EAAE;AAJa,C","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport { object, string, boolean, number } from 'yup'\nimport Table, { Th, Td } from '../../table'\nimport Widget from '../../widget'\n\nconst schema = object().shape({\n  url: string().url().required(),\n  filterThirdPartyResources: boolean(),\n  interval: number(),\n  strategy: string(),\n  title: string()\n})\n\nexport default class PageSpeedInsightsStats extends Component {\n  static defaultProps = {\n    filterThirdPartyResources: false,\n    interval: 1000 * 60 * 60 * 12,\n    strategy: 'desktop',\n    title: 'PageSpeed Stats'\n  }\n\n  state = {\n    stats: {},\n    loading: true,\n    error: false\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  bytesToKilobytes (bytes) {\n    return bytes > 0 ? (bytes / 1024).toFixed(1) : 0\n  }\n\n  async fetchInformation () {\n    const { url, filterThirdPartyResources, strategy } = this.props\n\n    const searchParams = [\n      `url=${url}`,\n      `filter_third_party_resources=${filterThirdPartyResources}`,\n      `strategy=${strategy}`\n    ].join('&')\n\n    try {\n      const res = await fetch(`https://www.googleapis.com/pagespeedonline/v2/runPagespeed?${searchParams}`)\n      const json = await res.json()\n\n      const pageStats = json.pageStats\n      const stats = {\n        cssCount: pageStats.numberCssResources || 0,\n        cssSize: this.bytesToKilobytes(pageStats.cssResponseBytes),\n        htmlSize: this.bytesToKilobytes(pageStats.htmlResponseBytes),\n        imageSize: this.bytesToKilobytes(pageStats.imageResponseBytes),\n        javascriptCount: pageStats.numberJsResources || 0,\n        javascriptSize: this.bytesToKilobytes(pageStats.javascriptResponseBytes),\n        requestCount: pageStats.numberResources || 0,\n        requestSize: this.bytesToKilobytes(pageStats.totalRequestBytes),\n        otherSize: this.bytesToKilobytes(pageStats.otherResponseBytes)\n      }\n\n      this.setState({ error: false, loading: false, stats })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  render () {\n    const { error, loading, stats } = this.state\n    const { title } = this.props\n    return (\n      <Widget title={title} loading={loading} error={error}>\n        <Table>\n          <tbody>\n            <tr>\n              <Th>Request</Th>\n              <Td>{stats.requestSize} KB ({stats.requestCount})</Td>\n            </tr>\n\n            <tr>\n              <Th>JavaScript</Th>\n              <Td>{stats.javascriptSize} KB ({stats.javascriptCount})</Td>\n            </tr>\n\n            <tr>\n              <Th>CSS</Th>\n              <Td>{stats.cssSize} KB ({stats.cssCount})</Td>\n            </tr>\n\n            <tr>\n              <Th>HTML</Th>\n              <Td>{stats.htmlSize} KB</Td>\n            </tr>\n\n            <tr>\n              <Th>Image</Th>\n              <Td>{stats.imageSize} KB</Td>\n            </tr>\n\n            <tr>\n              <Th>Other</Th>\n              <Td>{stats.otherSize} KB</Td>\n            </tr>\n          </tbody>\n        </Table>\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}