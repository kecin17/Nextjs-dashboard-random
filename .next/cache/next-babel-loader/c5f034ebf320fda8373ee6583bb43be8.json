{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\jenkins\\\\build-duration.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport styled from 'styled-components';\nimport { object, string, array, number } from 'yup';\nimport Widget from '../../widget';\nimport Link from '../../link';\nimport Table, { Th, Td } from '../../table';\nimport LoadingIndicator from '../../loading-indicator';\nimport { basicAuthHeader } from '../../../lib/auth';\nconst Kpi = styled.span.withConfig({\n  displayName: \"build-duration__Kpi\",\n  componentId: \"sc-1xgmrl1-0\"\n})([\"color:\", \";font-weight:700;font-size:20px;\"], props => props.theme.palette.primaryColor);\nconst schema = object().shape({\n  url: string().url().required(),\n  jobs: array(object({\n    label: string().required(),\n    path: string().required(),\n    branch: string()\n  })).required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n});\nexport default class JenkinsBuildDuration extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: true,\n      error: false\n    });\n  }\n\n  componentDidMount() {\n    schema.validate(this.props).then(() => this.fetchInformation()).catch(err => {\n      console.error(`${err.name} @ ${this.constructor.name}`, err.errors);\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  formatTime(ms) {\n    const s = ms / 1000;\n\n    if (s > 60) {\n      const min = Math.floor(s / 60);\n      let minSec = Math.round(s - min * 60);\n      minSec = minSec.toString().length === 1 ? `0${minSec}` : minSec;\n      return __jsx(React.Fragment, null, __jsx(Kpi, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }\n      }, min, \":\", minSec), \" min\");\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Kpi, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }, Math.round(s)), \" sec\");\n  }\n\n  async fetchInformation() {\n    const {\n      authKey,\n      jobs,\n      url\n    } = this.props;\n    const opts = authKey ? {\n      headers: basicAuthHeader(authKey)\n    } : {};\n\n    try {\n      const builds = await Promise.all(jobs.map(async job => {\n        const branch = job.branch ? `job/${job.branch}/` : '';\n        const res = await fetch(`${url}/job/${job.path}/${branch}lastBuild/api/json`, opts);\n        const json = await res.json();\n        return {\n          name: job.label,\n          url: json.url,\n          duration: json.duration\n        };\n      }));\n      this.setState({\n        error: false,\n        loading: false,\n        builds\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval);\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      builds\n    } = this.state;\n    const {\n      title\n    } = this.props;\n    return __jsx(Widget, {\n      title: title,\n      error: error,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, builds && builds.map(build => __jsx(\"tr\", {\n      key: `jenkins-${build.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, __jsx(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, build.name), __jsx(Td, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: build.url,\n      title: build.duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, build.duration ? this.formatTime(build.duration) : __jsx(LoadingIndicator, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }))))))));\n  }\n\n}\n\n_defineProperty(JenkinsBuildDuration, \"defaultProps\", {\n  interval: 1000 * 60 * 5,\n  title: 'Build Duration'\n});","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/jenkins/build-duration.js"],"names":["Component","fetch","styled","object","string","array","number","Widget","Link","Table","Th","Td","LoadingIndicator","basicAuthHeader","Kpi","span","props","theme","palette","primaryColor","schema","shape","url","required","jobs","label","path","branch","interval","title","authKey","JenkinsBuildDuration","loading","error","componentDidMount","validate","then","fetchInformation","catch","err","console","name","constructor","errors","setState","componentWillUnmount","clearTimeout","timeout","formatTime","ms","s","min","Math","floor","minSec","round","toString","length","opts","headers","builds","Promise","all","map","job","res","json","duration","setTimeout","render","state","build"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport styled from 'styled-components'\nimport { object, string, array, number } from 'yup'\n\nimport Widget from '../../widget'\nimport Link from '../../link'\nimport Table, { Th, Td } from '../../table'\nimport LoadingIndicator from '../../loading-indicator'\nimport { basicAuthHeader } from '../../../lib/auth'\n\nconst Kpi = styled.span`\n  color: ${props => props.theme.palette.primaryColor};\n  font-weight: 700;\n  font-size: 20px;\n`\n\nconst schema = object().shape({\n  url: string().url().required(),\n  jobs: array(object({\n    label: string().required(),\n    path: string().required(),\n    branch: string()\n  })).required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n})\n\nexport default class JenkinsBuildDuration extends Component {\n  static defaultProps = {\n    interval: 1000 * 60 * 5,\n    title: 'Build Duration'\n  }\n\n  state = {\n    loading: true,\n    error: false\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  formatTime (ms) {\n    const s = ms / 1000\n\n    if (s > 60) {\n      const min = Math.floor(s / 60)\n      let minSec = Math.round(s - (min * 60))\n      minSec = minSec.toString().length === 1 ? `0${minSec}` : minSec\n\n      return <><Kpi>{min}:{minSec}</Kpi> min</>\n    }\n\n    return <><Kpi>{Math.round(s)}</Kpi> sec</>\n  }\n\n  async fetchInformation () {\n    const { authKey, jobs, url } = this.props\n    const opts = authKey ? { headers: basicAuthHeader(authKey) } : {}\n\n    try {\n      const builds = await Promise.all(\n        jobs.map(async job => {\n          const branch = job.branch ? `job/${job.branch}/` : ''\n          const res = await fetch(`${url}/job/${job.path}/${branch}lastBuild/api/json`, opts)\n          const json = await res.json()\n\n          return {\n            name: job.label,\n            url: json.url,\n            duration: json.duration\n          }\n        })\n      )\n\n      this.setState({ error: false, loading: false, builds })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  render () {\n    const { loading, error, builds } = this.state\n    const { title } = this.props\n\n    return (\n      <Widget title={title} error={error} loading={loading}>\n        <Table>\n          <tbody>\n            {builds && builds.map(build => (\n              <tr key={`jenkins-${build.name}`}>\n                <Th>{build.name}</Th>\n                <Td>\n                  <Link href={build.url} title={build.duration}>\n                    {\n                      build.duration\n                        ? this.formatTime(build.duration)\n                        : <LoadingIndicator size='small' />\n                    }\n                  </Link>\n                </Td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}