{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\sonarqube\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport styled from 'styled-components';\nimport fetch from 'isomorphic-unfetch';\nimport { object, string, number } from 'yup';\nimport Widget from '../../widget';\nimport Table, { Th, Td } from '../../table';\nimport Badge from '../../badge';\nimport { basicAuthHeader } from '../../../lib/auth';\n\nvar alertColor = function alertColor(_ref) {\n  var theme = _ref.theme,\n      children = _ref.children;\n\n  switch (children) {\n    case 'ERROR':\n      return theme.palette.errorColor;\n\n    case 'WARN':\n      return theme.palette.warnColor;\n\n    default:\n      // OK\n      return theme.palette.successColor;\n  }\n};\n\nvar Alert = styled.span.withConfig({\n  displayName: \"sonarqube__Alert\",\n  componentId: \"sc-1guu1e-0\"\n})([\"color:\", \";\"], alertColor);\n_c = Alert;\n\nvar sonarBadgeColor = function sonarBadgeColor(_ref2) {\n  var theme = _ref2.theme,\n      children = _ref2.children;\n\n  switch (children) {\n    case 'A':\n      return theme.palette.successColor;\n\n    case 'B':\n      return theme.palette.successSecondaryColor;\n\n    case 'C':\n      return theme.palette.warnColor;\n\n    case 'D':\n      return theme.palette.warnSecondaryColor;\n\n    case 'E':\n      return theme.palette.errorColor;\n\n    default:\n      return 'transparent';\n  }\n};\n\nvar SonarBadge = styled(Badge).withConfig({\n  displayName: \"sonarqube__SonarBadge\",\n  componentId: \"sc-1guu1e-1\"\n})([\"background-color:\", \";\"], sonarBadgeColor);\n_c2 = SonarBadge;\nvar schema = object().shape({\n  url: string().url().required(),\n  componentKey: string().required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n});\n\nvar SonarQube = /*#__PURE__*/function (_Component) {\n  _inherits(SonarQube, _Component);\n\n  var _super = _createSuper(SonarQube);\n\n  function SonarQube() {\n    var _this;\n\n    _classCallCheck(this, SonarQube);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      measures: [],\n      loading: true,\n      error: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMetricValue\", function (measures, metricKey) {\n      var result = measures.filter(function (measure) {\n        return measure.metric === metricKey;\n      });\n      return result.length ? result[0].value : '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRatingValue\", function (measures, metricKey) {\n      var value = _this.getMetricValue(measures, metricKey);\n\n      switch (value) {\n        case '1.0':\n          return 'A';\n\n        case '2.0':\n          return 'B';\n\n        case '3.0':\n          return 'C';\n\n        case '4.0':\n          return 'D';\n\n        case '5.0':\n          return 'E';\n      }\n\n      return '?';\n    });\n\n    return _this;\n  }\n\n  _createClass(SonarQube, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      schema.validate(this.props).then(function () {\n        return _this2.fetchInformation();\n      })[\"catch\"](function (err) {\n        console.error(\"\".concat(err.name, \" @ \").concat(_this2.constructor.name), err.errors);\n\n        _this2.setState({\n          error: true,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"fetchInformation\",\n    value: function () {\n      var _fetchInformation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var _this$props, authKey, url, componentKey, opts, metricKeys, res, json;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, authKey = _this$props.authKey, url = _this$props.url, componentKey = _this$props.componentKey;\n                opts = authKey ? {\n                  headers: basicAuthHeader(authKey)\n                } : {}; // https://docs.sonarqube.org/display/SONAR/Metric+Definitions\n\n                metricKeys = ['alert_status', 'reliability_rating', 'bugs', 'security_rating', 'vulnerabilities', 'sqale_rating', 'code_smells', 'coverage', 'duplicated_lines_density'].join(',');\n                _context.prev = 3;\n                _context.next = 6;\n                return fetch(\"\".concat(url, \"/api/measures/component?componentKey=\").concat(componentKey, \"&metricKeys=\").concat(metricKeys), opts);\n\n              case 6:\n                res = _context.sent;\n                _context.next = 9;\n                return res.json();\n\n              case 9:\n                json = _context.sent;\n                this.setState({\n                  error: false,\n                  loading: false,\n                  measures: json.component.measures\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n                this.setState({\n                  error: true,\n                  loading: false\n                });\n\n              case 16:\n                _context.prev = 16;\n                this.timeout = setTimeout(function () {\n                  return _this3.fetchInformation();\n                }, this.props.interval);\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 13, 16, 19]]);\n      }));\n\n      function fetchInformation() {\n        return _fetchInformation.apply(this, arguments);\n      }\n\n      return fetchInformation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          loading = _this$state.loading,\n          measures = _this$state.measures;\n      var title = this.props.title;\n      var alertStatus = this.getMetricValue(measures, 'alert_status');\n      var reliabilityRating = this.getRatingValue(measures, 'reliability_rating');\n      var bugs = this.getMetricValue(measures, 'bugs');\n      var securityRating = this.getRatingValue(measures, 'security_rating');\n      var vulnerabilities = this.getMetricValue(measures, 'vulnerabilities');\n      var sqaleRating = this.getRatingValue(measures, 'sqale_rating');\n      var codeSmells = this.getMetricValue(measures, 'code_smells');\n      var coverage = this.getMetricValue(measures, 'coverage');\n      var duplicatedLinesDensity = this.getMetricValue(measures, 'duplicated_lines_density');\n      return __jsx(Widget, {\n        title: title,\n        loading: loading,\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, \"Quality Gate:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, __jsx(Alert, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      }, alertStatus))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"Reliability:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, __jsx(SonarBadge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, reliabilityRating), \" \", __jsx(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 62\n        }\n      }, \"(\", bugs, \")\"))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      }, \"Security:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, __jsx(SonarBadge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, securityRating), \" \", __jsx(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 59\n        }\n      }, \"(\", vulnerabilities, \")\"))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"Maintainability:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, __jsx(SonarBadge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, sqaleRating), \" \", __jsx(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 56\n        }\n      }, \"(\", codeSmells, \")\"))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, \"Coverage:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, coverage, \"%\")), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, __jsx(Th, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, \"Duplications:\"), __jsx(Td, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, duplicatedLinesDensity, \"%\")))));\n    }\n  }]);\n\n  return SonarQube;\n}(Component);\n\n_defineProperty(SonarQube, \"defaultProps\", {\n  interval: 1000 * 60 * 5,\n  title: 'SonarQube'\n});\n\nexport { SonarQube as default };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"SonarBadge\");","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/sonarqube/index.js"],"names":["Component","styled","fetch","object","string","number","Widget","Table","Th","Td","Badge","basicAuthHeader","alertColor","theme","children","palette","errorColor","warnColor","successColor","Alert","span","sonarBadgeColor","successSecondaryColor","warnSecondaryColor","SonarBadge","schema","shape","url","required","componentKey","interval","title","authKey","SonarQube","measures","loading","error","metricKey","result","filter","measure","metric","length","value","getMetricValue","validate","props","then","fetchInformation","err","console","name","constructor","errors","setState","clearTimeout","timeout","opts","headers","metricKeys","join","res","json","component","setTimeout","state","alertStatus","reliabilityRating","getRatingValue","bugs","securityRating","vulnerabilities","sqaleRating","codeSmells","coverage","duplicatedLinesDensity"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport styled from 'styled-components'\nimport fetch from 'isomorphic-unfetch'\nimport { object, string, number } from 'yup'\nimport Widget from '../../widget'\nimport Table, { Th, Td } from '../../table'\nimport Badge from '../../badge'\nimport { basicAuthHeader } from '../../../lib/auth'\n\nconst alertColor = ({ theme, children }) => {\n  switch (children) {\n    case 'ERROR':\n      return theme.palette.errorColor\n    case 'WARN':\n      return theme.palette.warnColor\n    default: // OK\n      return theme.palette.successColor\n  }\n}\nconst Alert = styled.span`\n  color: ${alertColor};\n`\n\nconst sonarBadgeColor = ({ theme, children }) => {\n  switch (children) {\n    case 'A':\n      return theme.palette.successColor\n    case 'B':\n      return theme.palette.successSecondaryColor\n    case 'C':\n      return theme.palette.warnColor\n    case 'D':\n      return theme.palette.warnSecondaryColor\n    case 'E':\n      return theme.palette.errorColor\n    default:\n      return 'transparent'\n  }\n}\nconst SonarBadge = styled(Badge)`\n  background-color: ${sonarBadgeColor};\n`\n\nconst schema = object().shape({\n  url: string().url().required(),\n  componentKey: string().required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n})\n\nexport default class SonarQube extends Component {\n  static defaultProps = {\n    interval: 1000 * 60 * 5,\n    title: 'SonarQube'\n  }\n\n  state = {\n    measures: [],\n    loading: true,\n    error: false\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  async fetchInformation () {\n    const { authKey, url, componentKey } = this.props\n    const opts = authKey ? { headers: basicAuthHeader(authKey) } : {}\n\n    // https://docs.sonarqube.org/display/SONAR/Metric+Definitions\n    const metricKeys = [\n      'alert_status', 'reliability_rating', 'bugs', 'security_rating',\n      'vulnerabilities', 'sqale_rating', 'code_smells', 'coverage',\n      'duplicated_lines_density'\n    ].join(',')\n\n    try {\n      const res = await fetch(`${url}/api/measures/component?componentKey=${componentKey}&metricKeys=${metricKeys}`, opts)\n      const json = await res.json()\n\n      this.setState({ error: false, loading: false, measures: json.component.measures })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  getMetricValue = (measures, metricKey) => {\n    const result = measures.filter(measure => measure.metric === metricKey)\n    return result.length ? result[0].value : ''\n  }\n\n  getRatingValue = (measures, metricKey) => {\n    const value = this.getMetricValue(measures, metricKey)\n\n    switch (value) {\n      case '1.0':\n        return 'A'\n      case '2.0':\n        return 'B'\n      case '3.0':\n        return 'C'\n      case '4.0':\n        return 'D'\n      case '5.0':\n        return 'E'\n    }\n\n    return '?'\n  }\n\n  render () {\n    const { error, loading, measures } = this.state\n    const { title } = this.props\n\n    const alertStatus = this.getMetricValue(measures, 'alert_status')\n    const reliabilityRating = this.getRatingValue(measures, 'reliability_rating')\n    const bugs = this.getMetricValue(measures, 'bugs')\n    const securityRating = this.getRatingValue(measures, 'security_rating')\n    const vulnerabilities = this.getMetricValue(measures, 'vulnerabilities')\n    const sqaleRating = this.getRatingValue(measures, 'sqale_rating')\n    const codeSmells = this.getMetricValue(measures, 'code_smells')\n    const coverage = this.getMetricValue(measures, 'coverage')\n    const duplicatedLinesDensity = this.getMetricValue(measures, 'duplicated_lines_density')\n\n    return (\n      <Widget title={title} loading={loading} error={error}>\n        <Table>\n          <tbody>\n            <tr>\n              <Th>Quality Gate:</Th>\n              <Td><Alert>{alertStatus}</Alert></Td>\n            </tr>\n\n            <tr>\n              <Th>Reliability:</Th>\n              <Td>\n                <SonarBadge>{reliabilityRating}</SonarBadge> <small>({bugs})</small>\n              </Td>\n            </tr>\n\n            <tr>\n              <Th>Security:</Th>\n              <Td>\n                <SonarBadge>{securityRating}</SonarBadge> <small>({vulnerabilities})</small>\n              </Td>\n            </tr>\n\n            <tr>\n              <Th>Maintainability:</Th>\n              <Td>\n                <SonarBadge>{sqaleRating}</SonarBadge> <small>({codeSmells})</small>\n              </Td>\n            </tr>\n\n            <tr>\n              <Th>Coverage:</Th>\n              <Td>{coverage}%</Td>\n            </tr>\n\n            <tr>\n              <Th>Duplications:</Th>\n              <Td>{duplicatedLinesDensity}%</Td>\n            </tr>\n          </tbody>\n        </Table>\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}