{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widget.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { size } from 'polished';\nimport LoadingIndicator from './loading-indicator';\nimport ErrorIcon from './error-icon';\nconst Container = styled.div.withConfig({\n  displayName: \"widget__Container\",\n  componentId: \"sc-rztqo9-0\"\n})([\"\", \" align-items:center;background-color:\", \";border:1px solid \", \";display:flex;flex-direction:column;justify-content:center;margin:1em;padding:1em;\"], size('20em'), props => props.theme.palette.canvasColor, props => props.theme.palette.borderColor);\nconst Title = styled.h1.withConfig({\n  displayName: \"widget__Title\",\n  componentId: \"sc-rztqo9-1\"\n})([\"text-align:center;\"]);\nexport default (({\n  children,\n  error = false,\n  loading = false,\n  title = ''\n}) => {\n  let content;\n\n  if (loading) {\n    content = __jsx(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    });\n  } else if (error) {\n    content = __jsx(ErrorIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    });\n  } else {\n    content = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, children);\n  }\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, title ? __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }\n  }, title) : '', content);\n});","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widget.js"],"names":["styled","size","LoadingIndicator","ErrorIcon","Container","div","props","theme","palette","canvasColor","borderColor","Title","h1","children","error","loading","title","content"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,8JACXJ,IAAI,CAAC,MAAD,CADO,EAGOK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,WAHpC,EAIOH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBE,WAJpC,CAAf;AAYA,MAAMC,KAAK,GAAGX,MAAM,CAACY,EAAV;AAAA;AAAA;AAAA,0BAAX;AAIA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAK,GAAG,KAApB;AAA2BC,EAAAA,OAAO,GAAG,KAArC;AAA4CC,EAAAA,KAAK,GAAG;AAApD,CAAD,KAA8D;AAC3E,MAAIC,OAAJ;;AAEA,MAAIF,OAAJ,EAAa;AACXE,IAAAA,OAAO,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFD,MAEO,IAAIH,KAAJ,EAAW;AAChBG,IAAAA,OAAO,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFM,MAEA;AACLA,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,QAAN,CAAV;AACD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,GAAG,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAAH,GAA4B,EADpC,EAEGC,OAFH,CADF;AAMD,CAjBD","sourcesContent":["import styled from 'styled-components'\nimport { size } from 'polished'\nimport LoadingIndicator from './loading-indicator'\nimport ErrorIcon from './error-icon'\n\nconst Container = styled.div`\n  ${size('20em')}\n  align-items: center;\n  background-color: ${props => props.theme.palette.canvasColor};\n  border: 1px solid ${props => props.theme.palette.borderColor};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 1em;\n  padding: 1em;\n`\n\nconst Title = styled.h1`\n  text-align: center;\n`\n\nexport default ({ children, error = false, loading = false, title = '' }) => {\n  let content\n\n  if (loading) {\n    content = <LoadingIndicator />\n  } else if (error) {\n    content = <ErrorIcon />\n  } else {\n    content = <div>{children}</div>\n  }\n\n  return (\n    <Container>\n      {title ? <Title>{title}</Title> : ''}\n      {content}\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}