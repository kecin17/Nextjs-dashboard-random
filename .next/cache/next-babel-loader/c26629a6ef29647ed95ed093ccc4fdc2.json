{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\github\\\\issue-count.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { object, string, number } from 'yup';\nimport Widget from '../../widget';\nimport Counter from '../../counter';\nimport { basicAuthHeader } from '../../../lib/auth';\nvar schema = object().shape({\n  owner: string().required(),\n  repository: string().required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n});\n\nvar GitHubIssueCount = /*#__PURE__*/function (_Component) {\n  _inherits(GitHubIssueCount, _Component);\n\n  var _super = _createSuper(GitHubIssueCount);\n\n  function GitHubIssueCount() {\n    var _this;\n\n    _classCallCheck(this, GitHubIssueCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0,\n      error: false,\n      loading: true\n    });\n\n    return _this;\n  }\n\n  _createClass(GitHubIssueCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      schema.validate(this.props).then(function () {\n        return _this2.fetchInformation();\n      })[\"catch\"](function (err) {\n        console.error(\"\".concat(err.name, \" @ \").concat(_this2.constructor.name), err.errors);\n\n        _this2.setState({\n          error: true,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"fetchInformation\",\n    value: function () {\n      var _fetchInformation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var _this$props, authKey, owner, repository, opts, res, json;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, authKey = _this$props.authKey, owner = _this$props.owner, repository = _this$props.repository;\n                opts = authKey ? {\n                  headers: basicAuthHeader(authKey)\n                } : {};\n                _context.prev = 2;\n                _context.next = 5;\n                return fetch(\"https://api.github.com/repos/\".concat(owner, \"/\").concat(repository), opts);\n\n              case 5:\n                res = _context.sent;\n                _context.next = 8;\n                return res.json();\n\n              case 8:\n                json = _context.sent;\n                this.setState({\n                  count: json.open_issues_count,\n                  error: false,\n                  loading: false\n                });\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                this.setState({\n                  error: true,\n                  loading: false\n                });\n\n              case 15:\n                _context.prev = 15;\n                this.timeout = setTimeout(function () {\n                  return _this3.fetchInformation();\n                }, this.props.interval);\n                return _context.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 12, 15, 18]]);\n      }));\n\n      function fetchInformation() {\n        return _fetchInformation.apply(this, arguments);\n      }\n\n      return fetchInformation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          count = _this$state.count,\n          error = _this$state.error,\n          loading = _this$state.loading;\n      var title = this.props.title;\n      return __jsx(Widget, {\n        title: title,\n        loading: loading,\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, __jsx(Counter, {\n        value: count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return GitHubIssueCount;\n}(Component);\n\n_defineProperty(GitHubIssueCount, \"defaultProps\", {\n  interval: 1000 * 60 * 5,\n  title: 'GitHub Issue Count'\n});\n\nexport { GitHubIssueCount as default };","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/github/issue-count.js"],"names":["Component","fetch","object","string","number","Widget","Counter","basicAuthHeader","schema","shape","owner","required","repository","interval","title","authKey","GitHubIssueCount","count","error","loading","validate","props","then","fetchInformation","err","console","name","constructor","errors","setState","clearTimeout","timeout","opts","headers","res","json","open_issues_count","setTimeout","state"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,KAAvC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,IAAMC,MAAM,GAAGN,MAAM,GAAGO,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAEP,MAAM,GAAGQ,QAAT,EADqB;AAE5BC,EAAAA,UAAU,EAAET,MAAM,GAAGQ,QAAT,EAFgB;AAG5BE,EAAAA,QAAQ,EAAET,MAAM,EAHY;AAI5BU,EAAAA,KAAK,EAAEX,MAAM,EAJe;AAK5BY,EAAAA,OAAO,EAAEZ,MAAM;AALa,CAAf,CAAf;;IAQqBa,gB;;;;;;;;;;;;;;;;4DAMX;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;;;;;;WAMR,6BAAqB;AAAA;;AACnBX,MAAAA,MAAM,CAACY,QAAP,CAAgB,KAAKC,KAArB,EACGC,IADH,CACQ;AAAA,eAAM,MAAI,CAACC,gBAAL,EAAN;AAAA,OADR,WAES,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACP,KAAR,WAAiBM,GAAG,CAACE,IAArB,gBAA+B,MAAI,CAACC,WAAL,CAAiBD,IAAhD,GAAwDF,GAAG,CAACI,MAA5D;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAAd;AACD,OALH;AAMD;;;WAED,gCAAwB;AACtBW,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACD;;;;uFAED;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BACyC,KAAKV,KAD9C,EACUN,OADV,eACUA,OADV,EACmBL,KADnB,eACmBA,KADnB,EAC0BE,UAD1B,eAC0BA,UAD1B;AAEQoB,gBAAAA,IAFR,GAEejB,OAAO,GAAG;AAAEkB,kBAAAA,OAAO,EAAE1B,eAAe,CAACQ,OAAD;AAA1B,iBAAH,GAA2C,EAFjE;AAAA;AAAA;AAAA,uBAKsBd,KAAK,wCAAiCS,KAAjC,cAA0CE,UAA1C,GAAwDoB,IAAxD,CAL3B;;AAAA;AAKUE,gBAAAA,GALV;AAAA;AAAA,uBAMuBA,GAAG,CAACC,IAAJ,EANvB;;AAAA;AAMUA,gBAAAA,IANV;AAQI,qBAAKN,QAAL,CAAc;AAAEZ,kBAAAA,KAAK,EAAEkB,IAAI,CAACC,iBAAd;AAAiClB,kBAAAA,KAAK,EAAE,KAAxC;AAA+CC,kBAAAA,OAAO,EAAE;AAAxD,iBAAd;AARJ;AAAA;;AAAA;AAAA;AAAA;AAUI,qBAAKU,QAAL,CAAc;AAAEX,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAAd;;AAVJ;AAAA;AAYI,qBAAKY,OAAL,GAAeM,UAAU,CAAC;AAAA,yBAAM,MAAI,CAACd,gBAAL,EAAN;AAAA,iBAAD,EAAgC,KAAKF,KAAL,CAAWR,QAA3C,CAAzB;AAZJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAgBA,kBAAU;AACR,wBAAkC,KAAKyB,KAAvC;AAAA,UAAQrB,KAAR,eAAQA,KAAR;AAAA,UAAeC,KAAf,eAAeA,KAAf;AAAA,UAAsBC,OAAtB,eAAsBA,OAAtB;AACA,UAAQL,KAAR,GAAkB,KAAKO,KAAvB,CAAQP,KAAR;AACA,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,OAAO,EAAEK,OAA/B;AAAwC,QAAA,KAAK,EAAED,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAED,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAjD2CjB,S;;gBAAzBgB,gB,kBACG;AACpBH,EAAAA,QAAQ,EAAE,OAAO,EAAP,GAAY,CADF;AAEpBC,EAAAA,KAAK,EAAE;AAFa,C;;SADHE,gB","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport { object, string, number } from 'yup'\nimport Widget from '../../widget'\nimport Counter from '../../counter'\nimport { basicAuthHeader } from '../../../lib/auth'\n\nconst schema = object().shape({\n  owner: string().required(),\n  repository: string().required(),\n  interval: number(),\n  title: string(),\n  authKey: string()\n})\n\nexport default class GitHubIssueCount extends Component {\n  static defaultProps = {\n    interval: 1000 * 60 * 5,\n    title: 'GitHub Issue Count'\n  }\n\n  state = {\n    count: 0,\n    error: false,\n    loading: true\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  async fetchInformation () {\n    const { authKey, owner, repository } = this.props\n    const opts = authKey ? { headers: basicAuthHeader(authKey) } : {}\n\n    try {\n      const res = await fetch(`https://api.github.com/repos/${owner}/${repository}`, opts)\n      const json = await res.json()\n\n      this.setState({ count: json.open_issues_count, error: false, loading: false })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  render () {\n    const { count, error, loading } = this.state\n    const { title } = this.props\n    return (\n      <Widget title={title} loading={loading} error={error}>\n        <Counter value={count} />\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}