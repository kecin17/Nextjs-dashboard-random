{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\u061717\\\\Documents\\\\Next\\\\dashboard-master\\\\components\\\\widgets\\\\bitbucket\\\\pull-request-count.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { object, string, number, array } from 'yup';\nimport Widget from '../../widget';\nimport Counter from '../../counter';\nimport { basicAuthHeader } from '../../../lib/auth';\nvar schema = object().shape({\n  url: string().url().required(),\n  project: string().required(),\n  repository: string().required(),\n  interval: number(),\n  title: string(),\n  users: array().of(string()),\n  authKey: string()\n});\n\nvar BitbucketPullRequestCount = /*#__PURE__*/function (_Component) {\n  _inherits(BitbucketPullRequestCount, _Component);\n\n  var _super = _createSuper(BitbucketPullRequestCount);\n\n  function BitbucketPullRequestCount() {\n    var _this;\n\n    _classCallCheck(this, BitbucketPullRequestCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0,\n      error: false,\n      loading: true\n    });\n\n    return _this;\n  }\n\n  _createClass(BitbucketPullRequestCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      schema.validate(this.props).then(function () {\n        return _this2.fetchInformation();\n      })[\"catch\"](function (err) {\n        console.error(\"\".concat(err.name, \" @ \").concat(_this2.constructor.name), err.errors);\n\n        _this2.setState({\n          error: true,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"fetchInformation\",\n    value: function () {\n      var _fetchInformation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var _this$props, authKey, url, project, repository, users, opts, res, json, count;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, authKey = _this$props.authKey, url = _this$props.url, project = _this$props.project, repository = _this$props.repository, users = _this$props.users;\n                opts = authKey ? {\n                  headers: basicAuthHeader(authKey)\n                } : {};\n                _context.prev = 2;\n                _context.next = 5;\n                return fetch(\"\".concat(url, \"/rest/api/1.0/projects/\").concat(project, \"/repos/\").concat(repository, \"/pull-requests?limit=100\"), opts);\n\n              case 5:\n                res = _context.sent;\n                _context.next = 8;\n                return res.json();\n\n              case 8:\n                json = _context.sent;\n\n                if (users.length) {\n                  count = json.values.filter(function (el) {\n                    return users.includes(el.user.slug);\n                  }).length;\n                } else {\n                  count = json.size;\n                }\n\n                this.setState({\n                  count: count,\n                  error: false,\n                  loading: false\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                this.setState({\n                  error: true,\n                  loading: false\n                });\n\n              case 16:\n                _context.prev = 16;\n                this.timeout = setTimeout(function () {\n                  return _this3.fetchInformation();\n                }, this.props.interval);\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 13, 16, 19]]);\n      }));\n\n      function fetchInformation() {\n        return _fetchInformation.apply(this, arguments);\n      }\n\n      return fetchInformation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          count = _this$state.count,\n          error = _this$state.error,\n          loading = _this$state.loading;\n      var title = this.props.title;\n      return __jsx(Widget, {\n        title: title,\n        loading: loading,\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, __jsx(Counter, {\n        value: count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return BitbucketPullRequestCount;\n}(Component);\n\n_defineProperty(BitbucketPullRequestCount, \"defaultProps\", {\n  interval: 1000 * 60 * 5,\n  title: 'Bitbucket PR Count',\n  users: []\n});\n\nexport { BitbucketPullRequestCount as default };","map":{"version":3,"sources":["C:/Users/u061717/Documents/Next/dashboard-master/components/widgets/bitbucket/pull-request-count.js"],"names":["Component","fetch","object","string","number","array","Widget","Counter","basicAuthHeader","schema","shape","url","required","project","repository","interval","title","users","of","authKey","BitbucketPullRequestCount","count","error","loading","validate","props","then","fetchInformation","err","console","name","constructor","errors","setState","clearTimeout","timeout","opts","headers","res","json","length","values","filter","el","includes","user","slug","size","setTimeout","state"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,KAA9C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,IAAMC,MAAM,GAAGP,MAAM,GAAGQ,KAAT,CAAe;AAC5BC,EAAAA,GAAG,EAAER,MAAM,GAAGQ,GAAT,GAAeC,QAAf,EADuB;AAE5BC,EAAAA,OAAO,EAAEV,MAAM,GAAGS,QAAT,EAFmB;AAG5BE,EAAAA,UAAU,EAAEX,MAAM,GAAGS,QAAT,EAHgB;AAI5BG,EAAAA,QAAQ,EAAEX,MAAM,EAJY;AAK5BY,EAAAA,KAAK,EAAEb,MAAM,EALe;AAM5Bc,EAAAA,KAAK,EAAEZ,KAAK,GAAGa,EAAR,CAAWf,MAAM,EAAjB,CANqB;AAO5BgB,EAAAA,OAAO,EAAEhB,MAAM;AAPa,CAAf,CAAf;;IAUqBiB,yB;;;;;;;;;;;;;;;;4DAOX;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;;;;;;WAMR,6BAAqB;AAAA;;AACnBd,MAAAA,MAAM,CAACe,QAAP,CAAgB,KAAKC,KAArB,EACGC,IADH,CACQ;AAAA,eAAM,MAAI,CAACC,gBAAL,EAAN;AAAA,OADR,WAES,UAACC,GAAD,EAAS;AACdC,QAAAA,OAAO,CAACP,KAAR,WAAiBM,GAAG,CAACE,IAArB,gBAA+B,MAAI,CAACC,WAAL,CAAiBD,IAAhD,GAAwDF,GAAG,CAACI,MAA5D;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAAd;AACD,OALH;AAMD;;;WAED,gCAAwB;AACtBW,MAAAA,YAAY,CAAC,KAAKC,OAAN,CAAZ;AACD;;;;uFAED;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuD,KAAKV,KAD5D,EACUN,OADV,eACUA,OADV,EACmBR,GADnB,eACmBA,GADnB,EACwBE,OADxB,eACwBA,OADxB,EACiCC,UADjC,eACiCA,UADjC,EAC6CG,KAD7C,eAC6CA,KAD7C;AAEQmB,gBAAAA,IAFR,GAEejB,OAAO,GAAG;AAAEkB,kBAAAA,OAAO,EAAE7B,eAAe,CAACW,OAAD;AAA1B,iBAAH,GAA2C,EAFjE;AAAA;AAAA;AAAA,uBAKsBlB,KAAK,WAAIU,GAAJ,oCAAiCE,OAAjC,oBAAkDC,UAAlD,+BAAwFsB,IAAxF,CAL3B;;AAAA;AAKUE,gBAAAA,GALV;AAAA;AAAA,uBAMuBA,GAAG,CAACC,IAAJ,EANvB;;AAAA;AAMUA,gBAAAA,IANV;;AASI,oBAAItB,KAAK,CAACuB,MAAV,EAAkB;AAChBnB,kBAAAA,KAAK,GAAGkB,IAAI,CAACE,MAAL,CAAYC,MAAZ,CAAmB,UAACC,EAAD;AAAA,2BAAQ1B,KAAK,CAAC2B,QAAN,CAAeD,EAAE,CAACE,IAAH,CAAQC,IAAvB,CAAR;AAAA,mBAAnB,EAAyDN,MAAjE;AACD,iBAFD,MAEO;AACLnB,kBAAAA,KAAK,GAAGkB,IAAI,CAACQ,IAAb;AACD;;AAED,qBAAKd,QAAL,CAAc;AAAEZ,kBAAAA,KAAK,EAALA,KAAF;AAASC,kBAAAA,KAAK,EAAE,KAAhB;AAAuBC,kBAAAA,OAAO,EAAE;AAAhC,iBAAd;AAfJ;AAAA;;AAAA;AAAA;AAAA;AAiBI,qBAAKU,QAAL,CAAc;AAAEX,kBAAAA,KAAK,EAAE,IAAT;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAAd;;AAjBJ;AAAA;AAmBI,qBAAKY,OAAL,GAAea,UAAU,CAAC;AAAA,yBAAM,MAAI,CAACrB,gBAAL,EAAN;AAAA,iBAAD,EAAgC,KAAKF,KAAL,CAAWV,QAA3C,CAAzB;AAnBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAuBA,kBAAU;AACR,wBAAkC,KAAKkC,KAAvC;AAAA,UAAQ5B,KAAR,eAAQA,KAAR;AAAA,UAAeC,KAAf,eAAeA,KAAf;AAAA,UAAsBC,OAAtB,eAAsBA,OAAtB;AACA,UAAQP,KAAR,GAAkB,KAAKS,KAAvB,CAAQT,KAAR;AACA,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,OAAO,EAAEO,OAA/B;AAAwC,QAAA,KAAK,EAAED,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAED,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAzDoDrB,S;;gBAAlCoB,yB,kBACG;AACpBL,EAAAA,QAAQ,EAAE,OAAO,EAAP,GAAY,CADF;AAEpBC,EAAAA,KAAK,EAAE,oBAFa;AAGpBC,EAAAA,KAAK,EAAE;AAHa,C;;SADHG,yB","sourcesContent":["import { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport { object, string, number, array } from 'yup'\nimport Widget from '../../widget'\nimport Counter from '../../counter'\nimport { basicAuthHeader } from '../../../lib/auth'\n\nconst schema = object().shape({\n  url: string().url().required(),\n  project: string().required(),\n  repository: string().required(),\n  interval: number(),\n  title: string(),\n  users: array().of(string()),\n  authKey: string()\n})\n\nexport default class BitbucketPullRequestCount extends Component {\n  static defaultProps = {\n    interval: 1000 * 60 * 5,\n    title: 'Bitbucket PR Count',\n    users: []\n  }\n\n  state = {\n    count: 0,\n    error: false,\n    loading: true\n  }\n\n  componentDidMount () {\n    schema.validate(this.props)\n      .then(() => this.fetchInformation())\n      .catch((err) => {\n        console.error(`${err.name} @ ${this.constructor.name}`, err.errors)\n        this.setState({ error: true, loading: false })\n      })\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  async fetchInformation () {\n    const { authKey, url, project, repository, users } = this.props\n    const opts = authKey ? { headers: basicAuthHeader(authKey) } : {}\n\n    try {\n      const res = await fetch(`${url}/rest/api/1.0/projects/${project}/repos/${repository}/pull-requests?limit=100`, opts)\n      const json = await res.json()\n\n      let count\n      if (users.length) {\n        count = json.values.filter((el) => users.includes(el.user.slug)).length\n      } else {\n        count = json.size\n      }\n\n      this.setState({ count, error: false, loading: false })\n    } catch (error) {\n      this.setState({ error: true, loading: false })\n    } finally {\n      this.timeout = setTimeout(() => this.fetchInformation(), this.props.interval)\n    }\n  }\n\n  render () {\n    const { count, error, loading } = this.state\n    const { title } = this.props\n    return (\n      <Widget title={title} loading={loading} error={error}>\n        <Counter value={count} />\n      </Widget>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}